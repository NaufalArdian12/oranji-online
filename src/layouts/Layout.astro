---
interface Props {
	title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="Astro description" />
		<meta name="viewport" content="width=device-width" />
		<link rel="apple-touch-icon" sizes="180x180" href="favicon_io/apple-touch-icon.png">
		<link rel="icon" type="image/png" sizes="32x32" href="favicon_io/favicon-32x32.png">
		<link rel="icon" type="image/png" sizes="16x16" href="favicon_io/favicon-16x16.png">
		<link rel="manifest" href="favicon_io/site.webmanifest">
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
		<script is:inline>
  // theme bootstrap: set html.dark sebelum paint/hydration
		(function() {
			try {
			var ls = typeof localStorage !== 'undefined' ? localStorage.getItem('theme') : null;
			var theme = ls ? ls : (window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light');
			if (theme === 'dark') document.documentElement.classList.add('dark');
			else document.documentElement.classList.remove('dark');

			// sinkronkan perubahan class ke localStorage
			var obs = new MutationObserver(function() {
				var isDark = document.documentElement.classList.contains('dark');
				try { localStorage.setItem('theme', isDark ? 'dark' : 'light'); } catch {}
			});
			obs.observe(document.documentElement, { attributes: true, attributeFilter: ['class'] });
			} catch {}
		})();
</script>

	</head>
	<body>
		<slot />
	</body>
</html>
